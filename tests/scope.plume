\-- Test 'Variable block scope 1'
\macro double[x] {$x $x}\--
\macro foo[x] {\double $x}\--
\foo 1
\-- Result
1 1
\-- End

\-- Test 'Variable block scope 2'
\macro bar[x] {${local y = 1} $x}\--
\macro foo {\bar $y}\--
\foo
\-- Result
 
\-- End

\-- Test 'Variable block scope 3'
\macro foo[x] {$x}\--
\macro bar[x] {$x}\--
\foo {\--
    ${x=3}\--
    \bar{$x}\--
}\--
\-- Result
3
\-- End

\-- Test 'Variable block scope 4'
\macro foo[x] {$x}\--
\macro bar[x] {\--
    \foo {\foo $x}\--
}\--
\bar a
\-- Result
a
\-- End

\-- Test 'Variable block scope 5'
\macro id[x] {$x}
\macro foo[bar] {\id{$bar}}
\foo{bar}\n
\foo{baz}
\-- Result
bar
baz
\-- End

\-- Test 'Variable block scope 6'
\macro foo[x]{$x}\macro bar[x]{$x}\bar {\foo {${local x=0} $x}}
\-- Result
0
\-- End

\-- Test 'Variable block scope 7'
\macro foo[x] {$x}
\foo {\for ${i=1,4} {$i}}
\-- Result
1234
\-- End

\-- Test 'global 1'
\macro foo {${x=0}}
\foo
$x
\-- Result
0
\-- End

\-- Test 'global 2'
\macro foo {${x=0}}
${x=1}
\foo
$x
\-- Result
0
\-- End

\-- Test 'Simple closure'
\macro mymacro[name body] {
    \macro {$name} {$body}
}
\mymacro foo bar
\foo
\-- Result
bar
\-- End

\-- Test 'Independant closures'
\macro mymacro[name body] {
    \macro {$name} {$body}
}
\mymacro foo bar
\mymacro bar baz
\foo\n
\bar
\-- Result
bar
baz
\-- End

\-- Test 'Closure in Expression'
\macro create_multiplier[multiplier:number] {
    \macro multiply_by[x:number] { ${x*multiplier} }
    \multiply_by {3}
}
\create_multiplier {2}
\-- Result
 6 
\-- End

\-- Test 'Local test 1'
${
    local a = 4
}\--
$a
\-- Result
4
\-- End

\-- Test 'Local test 2'
\macro foo[body] {$body}\--
\--
\macro bar {\--
    \foo {\--
        ${local x=5}\--
        $x\--
    }\--
}\--
\bar
\-- Result
5
\-- End

\-- Test 'default_local 1'
\macro foo[x=bar] {$x}\--
\foo\n
\do {
    \foo\n
    \ldefault foo[x=foo]
    \foo\n
}
\foo
\-- Result
bar
bar
foo
bar
\-- End

\-- Test 'default_local eval'
\ldefault[.1f] eval
\do {
    \ldefault[.3f] eval
    ${1/3}\n
}
${1/3}
\-- Result
0.333
0.3
\-- End

\-- Test 'local_macro'
\macro foo bar
\do {
    \lmacro foo baz
    \foo\n
}
\foo
\-- Result
baz
bar
\-- End

\-- Test 'local_config (macro)'
\config filter_newlines !
\do {
    \lconfig filter_newlines ?
    foo
    bar
}
baz
foo
\-- Result
!!?foo?bar?baz!foo
\-- End

\-- Test 'local_config (script)'
${plume.config.filter_newlines = "!"}
\do {
    ${plume.local_config.filter_newlines = "?"}
    foo
    bar
}
baz
foo
\-- Result
!!?foo?bar?baz!foo
\-- End

\-- Test 'local with return 1'
${
    local a = 5
    return a+1
}
$a
\-- Result
65
\-- End

\-- Test 'local with return 2'
${
    local i=5
    for i=1, 10 do
        return i
    end
}
$i
\-- Result
11
\-- End