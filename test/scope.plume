// Test 'Variable block scope 1'
\def double[x] {$x $x}//
\def foo[x] {\double $x}//
\foo 1
// Result
1 1
// End

// Test 'Variable block scope 2'
\def bar[x] {${local y = 1} $x}//
\def foo {\bar $y}//
\foo
// Result
 
// End

// Test 'Variable block scope 3'
\def foo[x] {$x}//
\def bar[x] {$x}//
\foo {//
    ${x=3}//
    \bar{$x}//
}//
// Result
3
// End

// Test 'Variable block scope 4'
\def foo[x] {$x}//
\def bar[x] {//
    \foo {\foo $x}//
}//
\bar a
// Result
a
// End

// Test 'Variable block scope 5'
\def id[x] {$x}//
\def foo[bar] {\id{$bar}}//
\foo{bar}
\foo{baz}
// Result
bar
baz
// End

// Test 'Variable block scope 6'
\def foo[x]{$x}\def bar[x]{$x}\bar {\foo {${local x=0} $x}}
// Result
 0
// End

// Test 'Variable block scope 5'
\def foo[x] {$x}//
\foo {\for {i=1,4} {$i}}
// Result
1234
// End

// Test 'global 1'
\def foo {${x=0}}//
\foo//
$x//
// Result
0
// End

// Test 'global 2'
\def foo {${x=0}}//
${x=1}//
\foo//
$x//
// Result
0
// End

// Test 'Simple closure'
\def mydef[name body] {//
    \def {$name} {$body}//
}//
\mydef foo bar//
\foo
// Result
bar
// End

// Test 'Independant closures'
\def mydef[name body] {//
    \def {$name} {$body}//
}//
\mydef foo bar//
\mydef bar baz//
\foo
\bar
// Result
bar
baz
// End

// Test 'Closure in Expression'
\def create_multiplier[multiplier] {
    \def multiply_by[x] { ${x*multiplier} }//
    \multiply_by {3}//
}//
\create_multiplier {2}
// Result

 6 
// End

// Test 'Local test 1'
${
    local a = 4
}//
$a
// Result
4
// End

// Test 'Local test 2'
\def foo[body] {$body}//
//
\def bar {//
    \foo {//
        ${local x=5}//
        $x//
    }//
}//
\bar
// Result
5
// End

// Test 'default_local 1'
\def foo[x=bar] {$x}//
\foo//
\do {
    \foo
    \default_local foo[x=foo]//
    \foo
}//
\foo
// Result
bar
bar
foo
bar
// End

// Test 'default_local eval'
\default_local eval [.1f]//
\do {//
    \default_local eval [.3f]//
    ${1/3}
}//
${1/3}
// Result
0.333
0.3
// End