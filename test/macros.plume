// Test 'simple macro 1'
\def foo bar\foo
// Result
bar
// End

// Test 'simple macro 2'
\def foo {bar bar}\foo
// Result
bar bar
// End

// Test 'macro with simple arg'
\def double[x] {#x #x}\double{foo}
// Result
foo foo
// End

// Test 'macro with simple args 1'
\def add[x y] {#x+#y}\add{1}{2}
// Result
1+2
// End

// Test 'macro with simple args 2'
\def add[x y] #{x+y}\add{1}{2}
// Result
3
// End

// Test 'macro args are local'
\def foo[x]{This is x:#x}//
\set x 0//
This is x:#x
\foo{5}
This is x:#x
// Result
This is x:0
This is x:5
This is x:0
// End

// Test 'macro with useless spaces'
\def foo[

]{bar}
// Result

// End

// Test 'variable args number'
\def multiargs {//
    \for {i, args in ipairs(__args)} {
        Argument #i : #args//
    }//
}//
\multiargs[foo bar baz]
// Result

        Argument 1 : foo
        Argument 2 : bar
        Argument 3 : baz
// End