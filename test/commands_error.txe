// Test 'Unknow macro'
\foo
// Error
File 'string', line 1 : Unknow macro 'foo'
    \foo
    ^^^^
// End

// Test 'Invalid macro name'
\foo/
// Error
File 'string', line 1 : 'foo/' is an invalid name for a macro.
    \foo/
    ^^^^^
// End

// Test 'Unknow macro (multilines)'
Hello!

\foo
// Error
File 'string', line 3 : Unknow macro 'foo'
    \foo
    ^^^^
// End

// Test 'No enough arguments'
\def x
// Error
File 'string', line 1 : End of block reached, not enough arguments for macro '\def'. 1 instead of 2.
    \def x
    ^^^^
// End

// Test 'Invalid command name'
\def foo! bar
// Error
File 'string', line 1 : 'foo!' is an invalid name for a macro.
    \def foo! bar
         ^^^^
Traceback :
    File 'string', line 1 : \def foo! bar
                            ^^^^
// End

// Test 'To many macro call'
\def foo {\foo}\foo
// Error
File 'string', line 1 : To many intricate macro call (over the configurated limit of 1000).
    \def foo {\foo}\foo
              ^^^^
Traceback :
    File 'string', line 1 : \def foo {\foo}\foo
                                      ^^^^
    File 'string', line 1 : \def foo {\foo}\foo
                                      ^^^^
    ...
    (same line again 998 times)
    File 'string', line 1 : \def foo {\foo}\foo
                                           ^^^^
// End

// Test 'Macro already exist'
\def foo bar \def foo barbar
// Error
File 'string', line 1 : The macro 'foo' already exist (defined in file 'string', line 1).
Use '\redef foo' to erase it.
    \def foo bar \def foo barbar
                      ^^^
Traceback :
    File 'string', line 1 : \def foo bar \def foo barbar
                                         ^^^^
// End

// Test 'Macro already exist, but no error'
\def foo bar \redef foo barbar
\foo
// Result
 
barbar
// End

// Test 'Macro already exist as standard'
\def for bar
// Error
File 'string', line 1 : The macro 'for' is a standard macro and is certainly used by other macros, so you shouldn't replace it. If you really want to, use '\redef_forced for'.
    \def for bar
         ^^^
Traceback :
    File 'string', line 1 : \def for bar
                            ^^^^
// End

// Test 'Macro already exist as standard, but no error'
\redef_forced for bar
\for
// Result

bar
// End

// Test 'Redef that doesn't exist'
\redef foo {}
// Error
File 'string', line 1 : The macro 'foo' doesn't exist, so you can't erase it. Use '\def foo' instead.
    \redef foo {}
           ^^^
Traceback :
    File 'string', line 1 : \redef foo {}
                            ^^^^^^
// End